{"version":3,"sources":["img/headshot.jpg","img/convenience-1.png","img/convenience-2.png","img/relationship-scopes.png","img/naming-1.png","img/naming-2.png","img/naming-3.png","img/naming-4.png","img/settings-0.png","img/settings-1.png","img/settings-2.png","img/settings-3.png","img/settings-4.png","img/profile-controller-concern.png","img/profile-controller-student.png","img/profile-controller-mentor.png","App.js","Code.js","serviceWorker.js","index.js"],"names":["module","exports","App","href","src","headshot","alt","target","rel","className","data-name","data-domain","data-tld","onClick","evt","window","location","dataset","name","domain","tld","Code","useState","showPanel","setShowPanel","scrollTop","setScrollTop","useEffect","scrollTo","top","left","behavior","setActivePanel","panel","data-panel","convenience1","convenience2","relationshipScopes","naming1","naming2","naming3","naming4","settings0","settings1","settings2","settings3","settings4","type","data-scroll-top","profileControllerStudent","profileControllerMentor","profileControllerConcern","id","Boolean","hostname","match","ReactDOM","render","StrictMode","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7c600f36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headshot.43979e73.jpg\";","module.exports = __webpack_public_path__ + \"static/media/convenience-1.8f95405d.png\";","module.exports = __webpack_public_path__ + \"static/media/convenience-2.253810bf.png\";","module.exports = __webpack_public_path__ + \"static/media/relationship-scopes.058080c7.png\";","module.exports = __webpack_public_path__ + \"static/media/naming-1.03a630ad.png\";","module.exports = __webpack_public_path__ + \"static/media/naming-2.11b2ef98.png\";","module.exports = __webpack_public_path__ + \"static/media/naming-3.8e6756f3.png\";","module.exports = __webpack_public_path__ + \"static/media/naming-4.471f6b74.png\";","module.exports = __webpack_public_path__ + \"static/media/settings-0.d50f68f0.png\";","module.exports = __webpack_public_path__ + \"static/media/settings-1.7c9ba842.png\";","module.exports = __webpack_public_path__ + \"static/media/settings-2.1aa2bc21.png\";","module.exports = __webpack_public_path__ + \"static/media/settings-3.344b01e0.png\";","module.exports = __webpack_public_path__ + \"static/media/settings-4.1289e4f7.png\";","module.exports = __webpack_public_path__ + \"static/media/profile-controller-concern.0d2caf0c.png\";","module.exports = __webpack_public_path__ + \"static/media/profile-controller-student.5cf01928.png\";","module.exports = __webpack_public_path__ + \"static/media/profile-controller-mentor.d4d0e1df.png\";","import React from 'react';\nimport headshot from './img/headshot.jpg';\nimport './App.scss';\n\nfunction App() {\n  const openMail = evt => {\n    window.location.href = 'mailto:' +\n      evt.target.dataset.name +\n      '@' +\n      evt.target.dataset.domain +\n      '.' +\n      evt.target.dataset.tld;\n\n    return false;\n  }\n\n  return (\n    <>\n      <header>\n        <h1>Joe Sak</h1>\n        <h2>Cloud &amp; Applications Engineer at <a href=\"http://kadenze.com\">Kadenze</a></h2>\n\n        <img\n          src={headshot}\n          alt=\"Professional headshot - vibrant gradient color background, blue t-shirt\"\n        />\n      </header>\n\n      <main>\n        <p>\n          Joe Sak is a software writer living in Guadalajara, Mexico with his\n          wife&nbsp;\n          <a\n            href=\"//www.youtube.com/watch?v=-RAN5l4Q0rw\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Cristina\n          </a>\n          &nbsp;and their&nbsp;\n          <a\n            href=\"//www.youtube.com/watch?v=Y1KSUBvHzx8&t=78\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            two cats, Fuji &amp; Bizen\n          </a>\n          .\n        </p>\n\n        <ul>\n          <li>\n            20 years of full stack web development, project management,\n            professional &amp; personal development\n          </li>\n\n          <li>\n            Hundreds of design agency clients from a variety of business sizes,\n            goals, &amp; industries\n          </li>\n\n          <li>Empathy and human-centered design, work philosophy</li>\n\n          <li>\n            Fundamental skill and continuous sharpening in Ruby, OOP, Rails,\n            HTML, CSS, Javascript, DevOps\n          </li>\n\n          <li>\n            Proactive collaborator in iterative project development and\n            prototyping\n          </li>\n\n          <li>Never done growing, always striving to do better</li>\n        </ul>\n\n        <p>\n          <button\n            className=\"cryptedmail button-as-link\"\n            data-name=\"joe\"\n            data-domain=\"joesak\"\n            data-tld=\"com\"\n            onClick={openMail}\n          ></button>\n        </p>\n\n        <p>\n          <a href=\"//github.com/joemsak\">github/joemsak</a>\n        </p>\n\n        <p>\n          <a href=\"//linkedin.com/in/joemsak\">linkedin/joemsak</a>\n        </p>\n\n        <p>\n          <a href=\"//instagram.com/dosgatoscreative\">\n            instagram/@dosgatoscreative\n          </a>\n        </p>\n\n        <p>\n          <a href=\"//www.youtube.com/channel/UCXeY9RpLlwONYgc2Ah-1rGA\">\n            youtube/Dos Gatos Creative\n          </a>\n        </p>\n\n        <p>\n          <a href=\"https://www.youtube.com/channel/UCDT9dBvD53u2UlO0NVrLMmQ\">\n            youtube/Joe Sak\n          </a>\n        </p>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React, { useState, useEffect } from 'react';\nimport Gist from 'react-gist';\n\nimport './App.scss';\n\nimport convenience1 from './img/convenience-1.png';\nimport convenience2 from './img/convenience-2.png';\n\nimport relationshipScopes from './img/relationship-scopes.png';\n\nimport naming1 from './img/naming-1.png';\nimport naming2 from './img/naming-2.png';\nimport naming3 from './img/naming-3.png';\nimport naming4 from './img/naming-4.png';\n\nimport settings0 from './img/settings-0.png';\nimport settings1 from './img/settings-1.png';\nimport settings2 from './img/settings-2.png';\nimport settings3 from './img/settings-3.png';\nimport settings4 from './img/settings-4.png';\n\nimport profileControllerConcern from './img/profile-controller-concern.png';\nimport profileControllerStudent from './img/profile-controller-student.png';\nimport profileControllerMentor from './img/profile-controller-mentor.png';\n\nfunction Code() {\n  const [showPanel, setShowPanel] = useState('current');\n  const [scrollTop, setScrollTop] = useState(false);\n\n  useEffect(\n    () => {\n      if (scrollTop)\n        window.scrollTo({ top: 0, left: 0, behavior: 'smooth' })\n      setScrollTop(false)\n    },\n    [scrollTop, setScrollTop]\n  )\n\n  const setActivePanel = evt => {\n    setScrollTop(evt.target.dataset.scrollTop === \"true\")\n    setShowPanel(evt.target.dataset.panel)\n  }\n\n  const currentPanelCss = () => {\n    return showPanel === 'current' ? 'show' : ''\n  }\n\n  const previousPanelCss = () => {\n    return showPanel === 'previous' ? 'show' : ''\n  }\n\n  const currentLinkCss = () => {\n    return showPanel === 'current' ? 'active' : ''\n  }\n\n  const previousLinkCss = () => {\n    return showPanel === 'previous' ? 'active' : ''\n  }\n\n  const gistEmbed = () => {\n    return showPanel === 'previous' ?\n      <Gist id='871cd16d04200ab6c16cfa95a52954e0' /> :\n      ''\n  }\n\n  return (\n    <main className=\"full\">\n      <h1>Hey there, Basecamp!</h1>\n\n      <h2>\n        I made this page for you to take a brief tour of&nbsp;\n        <a\n          href=\"//github.com/joemsak\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          my code\n        </a>\n      </h2>\n\n      <p><a href=\"/\">&larr; Back to main page</a></p>\n\n      <nav>\n        <h2\n          className={currentLinkCss()}\n          onClick={setActivePanel}\n          data-panel='current'\n        >\n          Current work sample\n        </h2>\n\n        <h2\n          className={previousLinkCss()}\n          onClick={setActivePanel}\n          data-panel='previous'\n        >\n          Previous work sample\n        </h2>\n      </nav>\n\n      <div className={`panel ${currentPanelCss()}`}>\n        <p>\n          First up, here is some code re-writing that I'm presently branched on\n          while trying to pass failing specs on our CI. Samples shown are from a\n          6-year old, <em>very legacy</em>, Rails 4.2 app that powers both&nbsp;\n          <a href=\"//kadenze.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Kadenze\n          </a>\n          &nbsp;and&nbsp;\n          <a href=\"//kannu.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Kannu\n          </a>\n          &nbsp;(Kannu has sub-domain multi-tenancy). The original developers\n          have been gone since before my time, so I've had to explore and learn\n          this codebase on my own since January 2019.\n        </p>\n\n        <h3>Packing known globals and terse details into convenience methods</h3>\n\n        <img\n          src={ convenience1 }\n          alt=\"Code sample of convenience method rearrangments\"\n        />\n\n        <img\n          src={ convenience2 }\n          alt=\"Code sample of convenience method rearrangments\"\n        />\n\n        <p>\n          Since `Institution.current` is a known global, I can call an existing\n          method that avoids requiring it as an argument in the wild. Similarly,\n          there is already a scope for the inner-workings of\n          `Institution.from_courses`. And while preparing this tour, I now see\n          another clean up opportunity between these two screenshots for my next\n          round of work!\n        </p>\n\n        <h3>Clear up duplication inside some association extensions</h3>\n\n        <img\n          src={ relationshipScopes }\n          alt=\"Code sample of duplication cleanup\"\n        />\n\n        <h3>\n          Improving readability and reminders of legacy hard-coded logic with\n          naming\n        </h3>\n\n        <img\n          src={ naming1 }\n          alt=\"Code sample of code naming choices\"\n        />\n\n        <p>\n          The policy files are rife with duplication and it's going to be quite a\n          patient slow burn to get to the point where all policies have been\n          consolidated and tidied up nicely, so I just try to clean them up as\n          I run into them.\n        </p>\n\n        <img\n          src={ naming2 }\n          alt=\"Code sample of code naming choices\"\n        />\n\n        <img\n          src={ naming3 }\n          alt=\"Code sample of code naming choices\"\n        />\n\n        <img\n          src={ naming4 }\n          alt=\"Code sample of code naming choices\"\n        />\n\n        <p>\n          The relevant bits above are the legacy hardcoded special cases for\n          Stanford/Princeton. It took the co-founder a minute to realize what the\n          original code was for, so I baked it into the new naming. We will see\n          the old \"in the wild\" calls among the next group of changes.\n        </p>\n\n        <h3>\n          Replacing a complicated concern with plain code in new convenience\n          methods\n        </h3>\n\n        <img\n          src={ settings0 }\n          alt=\"Code sample of replacing complex code with simpler code\"\n        />\n\n        <p>\n          Unfortunately, despite good intentions, this concern was hard to follow.\n          To boot, the code required for use in the wild was not convenient. In\n          the following examples, you will hopefully note the removal of the\n          dynamically created `get_setting` and `add_setting` methods in favor\n          of plain old boring ruby hash access.\n        </p>\n\n        <img\n          src={ settings1 }\n          alt=\"Code sample of replacing complex code with simpler code\"\n        />\n\n        <img\n          src={ settings2 }\n          alt=\"Code sample of replacing complex code with simpler code\"\n        />\n\n        <img\n          src={ settings3 }\n          alt=\"Code sample of replacing complex code with simpler code\"\n        />\n\n        <p>\n          It looks like `#allows_archive?` can now be re-written even simpler\n          during my next round of work!\n        </p>\n\n        <img\n          src={ settings4 }\n          alt=\"Code sample of replacing complex code with simpler code\"\n        />\n\n        <p>\n          I hope this has made it easier for developers to follow and continue\n          to improve the settings code for this model. And in case you're \n          wondering, it turns out there was only one other model which included\n          `ModelSettings` and wasn't even using it as much. Some code has been\n          left duplicated between the two models as a result, but I'm okay with\n          that for now.\n        </p>\n\n        <button\n          type=\"button\"\n          onClick={setActivePanel}\n          data-panel=\"previous\"\n          data-scroll-top=\"true\"\n        >\n          See the next sample &uarr;\n        </button>\n      </div>\n\n      <div className={`panel ${previousPanelCss()}`}>\n        <p>\n          In another quick sample, I'd like to demonstrate code from my last\n          greenfield project that still has my name on most of the lines of code\n          two years later. At a glance of various changes since I left, I can see\n          that other devs were able to follow my intentions pretty well, which\n          feels good.\n        </p>\n\n        <p>\n          These screenshots are from&nbsp;\n          <a\n            href=\"//github.com/Iridescent-CM/technovation-app\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            the open source code\n          </a>\n          &nbsp;of&nbsp;\n          <a\n            href=\"//my.technovationchallenge.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Technovation\n          </a>,\n          a team building &amp; competition platform for girls of underserved\n          communities all around the world to participate and learn application\n          development and entrepreneurship.\n        </p>\n\n        <p>\n          I am still proud of this code because I architected the routes,\n          controllers, and views such that each user-audience (mentors, students,\n          ambassadors, judges, and admins) are guaranteed to the developer that\n          the correct role has been authenticated. The code never needs to mix\n          concerns or add switch cases for the differing roles.\n        </p>\n\n        <p>\n          As a big believer in naming conventions, I set it up so that if an\n          audience role is in your file's subdirectory hierarchy (such as\n          `app/views/judges/resource/show.html.erb`) you are guaranteed the\n          current_user is of that role, and that role's code features will work.\n          Most duplicate templates and logic are shared via DRY, OOP extension.\n        </p>\n\n        <p>\n          The one example I am sharing here is of the student &amp; mentor profile\n          controllers with their shared concern. You'll note they have their own\n          parent controllers, which you can trust that each has their own filters\n          to guarantee the correct role authentication to the developers.\n        </p>\n\n        <img\n          src={ profileControllerStudent }\n          alt=\"Sample of an automagically-scoped dynamic profile controller\"\n        />\n\n        <img\n          src={ profileControllerMentor }\n          alt=\"Sample of an automagically-scoped dynamic profile controller\"\n        />\n\n        <p>\n          Looking back at this again today, I can see that maybe some defaults\n          could be further baked in so that some of these methods are\n          created automagically based on naming conventions. At least for now,\n          it's easy to read how the concern is overwritten between the different\n          roles.\n        </p>\n\n        <h3>Profile controller concern quick rewrite</h3>\n\n        <img\n          src={ profileControllerConcern }\n          alt=\"Sample of an automagic profile controller concern\"\n        />\n\n        <p>\n          Finally, on the one hand, I love that the other developers were able\n          to follow the existing code and have added new behavior in the concern\n          where it belongs. However, I see that it's probably time to prepare this\n          class for future refactoring, so I did a quick and dirty gist of how I\n          might begin those changes below.\n        </p>\n\n        { gistEmbed() }\n\n        <p>\n          Of course, given that this is a first draft, I'd discuss where it's\n          going with my teammates before taking it too far. I'd like to think\n          this would get some good ideas flowing.\n        </p>\n\n        <p>\n          I hope this page has served to give you a decent idea of my approach as\n          a coder. I would be delighted for a chance to elaborate on anything\n          of relevance to your team.\n        </p>\n\n        <p>Thank you again for your time! &mdash;Joe Sak</p>\n\n        <p><a href=\"/\">&larr; Back to main page</a></p>\n      </div>\n    </main>\n  )\n}\n\nexport default Code;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\n\nimport App from './App';\nimport Code from './Code';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route path=\"/code\"><Code /></Route>\n        <Route path=\"/\"><App /></Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}